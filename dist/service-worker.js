
        const manifestHash = "5zti1n";
        
        /* Qwik Service Worker */
const appBundles=[["q-ax6lccjF.js",[25,38],["0gfi0CXoYTc","OW0OMENauVE","Wq2Hs0j004o","zT1txil2NZM"]],["q-B3R10STm.js",[25,38],["5nLnpiV5H4c","CPbFZ07aIik"]],["q-BaWMWf1t.js",[25],["EvJLNGvXt18"]],["q-Beg2GmFb.js",[25,38],["2pdRVKDUavE","CiZja5l8W3k","eDpVP0KBhUs"]],["q-BGOj0Kwz.js",[25,33,38],["VgJUqBljXKc"]],["q-BiuXI5Lo.js",[25,33,38],["02wMImzEAbk","fX0bDjeJa0E","RPDJAz33WLA","TxCFOy819ag"]],["q-BOVLX0r9.js",[25,33,38],["e0ssiDXoeAM"]],["q-Bt6-mdhr.js",[22,25,38],["03wl4B3PYe4","0pN0AMJa0Jg","2eKHV0tUzxE","dakElEM0ZXA","pMWFVDdDl3M","WCYXMXaOdtE"]],["q-BUfqQ13i.js",[25,33,38],["KK5BfmKH4ZI","Nk9PlpjQm9Y","p9MSze0ojs4"]],["q-bxQknXqr.js",[25],["uPHV2oGn4wc"]],["q-BY5ccTA0.js",[38]],["q-Ce1w65Uq.js",[22,25,33,38],["nZGrLeXTa6g","UCQH23x9mzU"]],["q-Cey-aXHY.js",[25,33,38],["bx6j0LaWyhg"]],["q-CFW9j4YO.js",[25],["tNYG1Iu571w"]],["q-Cg5rKDC8.js",[25,38],["P4LpiWRSrIU"]],["q-Cq4lj60y.js",[25,38],["4ElcLab76lQ","6cIfUe8AleY","QhgO20uMdCQ","XDJIbtUnw50"]],["q-CXBnnB6S.js",[25,33,38],["4pbcJajGtCs"]],["q-CZIVYdBX.js",[25,33,38],["SGytLJ8uq8I"]],["q-D3WBTSLL.js",[],["DyVc0YBIqQU"]],["q-D6cBV_wf.js",[25,33,38]],["q-D8TebJPg.js",[25,38]],["q-D9xGsuKV.js",[25,33,38],["1dXFoSbSWis"]],["q-D_Z4-cek.js",[25,38]],["q-Dfdf_5bK.js",[25],["4Dx3te0wVYM"]],["q-DIg5zwvB.js",[25]],["q-DOfOxinU.js",[]],["q-DR4oNU7p.js",[24,25,33,38],["Ipfp442DRLg"]],["q-DRYmST9W.js",[24,25,33,38],["RI4ZVJ18hxE","zQysZhdKDPo"]],["q-DU1YHo9O.js",[25,33,38],["BUbtvTyvVRE","WmYC5H00wtI"]],["q-DuCJUo8d.js",[25,38]],["q-DvNYHnGq.js",[25,33,38],["snwU0Di7E7A"]],["q-f2qdL91B.js",[25,33,38],["8gdLBszqbaM","Osdg8FnYTw4","pIf0khHUxfY"]],["q-iz7VWvBz.js",[]],["q-jjn6GexR.js",[25,38]],["q-MNErTmVU.js",[25,38]],["q-mRm29Si4.js",[25,38]],["q-o8fjqDP-.js",[25],["7D0p4hAiqVE"]],["q-TCbtd4C3.js",[25],["A5bZC7WO00A"]],["q-uemlvruI.js",[]],["q-XOQuke6J.js",[25,38],["fNr1m43wcv8"]]];
const libraryBundleIds=[5];
const linkBundles=[[/^\/$/,[19,39,20,14]],[/^\/404\.html\/?$/,[19,39,29,13]],[/^\/blog\/?$/,[19,39,34,26]]];

        const excludeAssets = ['_headers', '_redirects']
        const version = "0.0.4";
        const publicDirAssets = ["favico.ico","favico.png","favicon.ico","favicon.png","favicon.svg","manifest.json","robots.txt","fonts/poppins-400.woff2","fonts/poppins-500.woff2","fonts/poppins-700.woff2"];
        const emittedAssets = ["/favicon.ico","/pwa-64x64.png","/pwa-192x192.png","/pwa-512x512.png","/maskable-icon-512x512.png","/apple-touch-icon-180x180.png","build/q-i0crtY3_.webp","build/q-BWsMkrtn.webp","build/q-CvVJlvt9.webp","build/q-dPtVClJU.webp","build/q-Yt_wDd4U.webp","build/q-C6E8fqJz.webp","build/q-CyS5YQcC.webp","build/q-3WSGVkqX.webp","build/q-CtL4ZZnW.webp","build/q-CQw0NPCP.webp","build/q-DItZXVp8.webp","build/q-mH-4ZdZx.css","q-manifest.json","build/q-bundle-graph-5zti1n.json","qwik-prefetch-service-worker.js"];
        const routes = [{ pathname: "/", pattern: new RegExp("^\\/$"),
                hasParams: false
             },
{ pathname: "/404.html", pattern: new RegExp("^\\/404\\.html\\/?$"),
                hasParams: false
             },
{ pathname: "/blog/", pattern: new RegExp("^\\/blog\\/?$"),
                hasParams: false
             }];
        
        const P="QwikBuild",A=new Set,T=new Map,y=[],H=(n,e)=>e.filter(t=>!n.some(s=>t.endsWith(s[0]))),F=(n,e)=>!!e&&!j(e),j=n=>{const e=n.headers.get("Cache-Control")||"";return e.includes("no-cache")||e.includes("max-age=0")},B=(n,e)=>n.some(t=>e.endsWith("/"+t[0])),$=(n,e)=>n.find(t=>t[0]===e),K=(n,e)=>e.map(t=>n[t]?n[t][0]:null),G=(n,e)=>e.map(t=>n.get(t)).filter(t=>t!=null),Q=n=>{const e=new Map;for(const t of n){const s=t[2];if(s)for(const a of s)e.set(a,t[0])}return e},M=(n,e,t,s)=>new Promise((a,c)=>{const r=s.url,i=t.get(r);if(i)i.push([a,c]);else{const o=u=>{const h=t.get(r);if(h){t.delete(r);for(const[p]of h)p(u.clone())}else a(u.clone())},l=u=>{const h=t.get(r);if(h){t.delete(r);for(const[p,S]of h)S(u)}else c(u)};t.set(r,[[a,c]]),n.match(r).then(u=>{if(F(s,u))o(u);else return e(s).then(async h=>{h.ok&&await n.put(r,h.clone()),o(h)})}).catch(u=>n.match(r).then(h=>{h?o(h):l(u)}))}}),C=(n,e,t,s,a,c=!1)=>{const r=()=>{for(;y.length>0&&T.size<6;){const o=y.shift(),l=new Request(o);A.has(o)?r():(A.add(o),M(e,t,T,l).finally(r))}},i=o=>{try{const l=$(n,o);if(l){const u=K(n,l[1]),h=new URL(o,s).href,p=y.indexOf(h);p>-1?c&&(y.splice(p,1),y.unshift(h)):c?y.unshift(h):y.push(h),u.forEach(i)}}catch(l){console.error(l)}};Array.isArray(a)&&a.forEach(i),r()},V=(n,e,t,s,a,c,r)=>{try{C(n,s,a,c,K(n,e))}catch(i){console.error(i)}for(const i of r)try{for(const o of t){const[l,u]=o;if(l.test(i)){C(n,s,a,c,K(n,u));break}}}catch(o){console.error(o)}},z=(n,e,t,s)=>{try{const a=s.href.split("/"),c=a[a.length-1];a[a.length-1]="";const r=new URL(a.join("/"));C(n,e,t,r,[c],!0)}catch(a){console.error(a)}},J=(n,e,t,s)=>{const a=n.fetch.bind(n),c=Q(e);n.addEventListener("fetch",r=>{const i=r.request;if(i.method==="GET"){const o=new URL(i.url);B(e,o.pathname)&&r.respondWith(n.caches.open(P).then(l=>(z(e,l,a,o),M(l,a,T,i))))}}),n.addEventListener("message",async({data:r})=>{if(r.type==="qprefetch"&&typeof r.base=="string"){const i=await n.caches.open(P),o=new URL(r.base,n.origin);Array.isArray(r.links)&&V(e,t,s,i,a,o,r.links),Array.isArray(r.bundles)&&C(e,i,a,o,r.bundles),Array.isArray(r.symbols)&&C(e,i,a,o,G(c,r.symbols))}}),n.addEventListener("activate",()=>{(async()=>{try{const r=await n.caches.open(P),o=(await r.keys()).map(u=>u.url),l=H(e,o);await Promise.all(l.map(u=>r.delete(u)))}catch(r){console.error(r)}})()})},X=()=>{typeof self<"u"&&typeof appBundles<"u"&&J(self,appBundles,libraryBundleIds,linkBundles)};try{self["workbox:core:7.0.0"]&&_()}catch{}const Y=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},Z=Y;class f extends Error{constructor(e,t){const s=Z(e,t);super(s),this.name=e,this.details=t}}const d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},L=n=>[d.prefix,n,d.suffix].filter(e=>e&&e.length>0).join("-"),ee=n=>{for(const e of Object.keys(d))n(e)},k={updateDetails:n=>{ee(e=>{typeof n[e]=="string"&&(d[e]=n[e])})},getGoogleAnalyticsName:n=>n||L(d.googleAnalytics),getPrecacheName:n=>n||L(d.precache),getPrefix:()=>d.prefix,getRuntimeName:n=>n||L(d.runtime),getSuffix:()=>d.suffix};function O(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const te="__WB_REVISION__";function se(n){if(!n)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const c=new URL(n,location.href);return{cacheKey:c.href,url:c.href}}const{revision:e,url:t}=n;if(!t)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(!e){const c=new URL(t,location.href);return{cacheKey:c.href,url:c.href}}const s=new URL(t,location.href),a=new URL(t,location.href);return s.searchParams.set(te,e),{cacheKey:s.href,url:a.href}}class ne{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;s?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return s}}}class ae{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const a=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let w;function re(){if(w===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),w=!0}catch{w=!1}w=!1}return w}async function ce(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new f("cross-origin-copy-response",{origin:t});const s=n.clone(),c={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},r=re()?s.body:await s.blob();return new Response(r,c)}const ie=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),"");function I(n,e){const t=new URL(n);for(const s of e)t.searchParams.delete(s);return t.href}async function oe(n,e,t,s){const a=I(e.url,t);if(e.url===a)return n.match(e,s);const c=Object.assign(Object.assign({},s),{ignoreSearch:!0}),r=await n.keys(e,c);for(const i of r){const o=I(i.url,t);if(a===o)return n.match(i,s)}}class le{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const he=new Set;async function ue(){for(const n of he)await n()}function fe(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function b(n){return typeof n=="string"?new Request(n):n}class de{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new le,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))s=await r({request:s.clone(),event:t})}catch(r){if(r instanceof Error)throw new f("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const c=s.clone();try{let r;r=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const i of this.iterateCallbacks("fetchDidSucceed"))r=await i({event:t,request:c,response:r});return r}catch(r){throw a&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:a.clone(),request:c.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=b(e);let s;const{cacheName:a,matchOptions:c}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},c),{cacheName:a});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:a,matchOptions:c,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,t){const s=b(e);await fe(0);const a=await this.getCacheKey(s,"write");if(!t)throw new f("cache-put-with-no-response",{url:ie(a.url)});const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:r,matchOptions:i}=this._strategy,o=await self.caches.open(r),l=this.hasCallback("cacheDidUpdate"),u=l?await oe(o,a.clone(),["__WB_REVISION__"],i):null;try{await o.put(a,l?c.clone():c)}catch(h){if(h instanceof Error)throw h.name==="QuotaExceededError"&&await ue(),h}for(const h of this.iterateCallbacks("cacheDidUpdate"))await h({cacheName:r,oldResponse:u,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const c of this.iterateCallbacks("cacheKeyWillBeUsed"))a=b(await c({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield c=>{const r=Object.assign(Object.assign({},c),{state:s});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class E{constructor(e={}){this.cacheName=k.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,c=new de(this,{event:t,request:s,params:a}),r=this._getResponse(c,s,t),i=this._awaitComplete(r,c,s,t);return[r,i]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new f("no-response",{url:t.url})}catch(c){if(c instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(a=await r({error:c,event:s,request:t}),a)break}if(!a)throw c}for(const c of e.iterateCallbacks("handlerWillRespond"))a=await c({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let c,r;try{c=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:c}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:c,error:r}),t.destroy(),r)throw r}}class g extends E{constructor(e={}){e.cacheName=k.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(this._fallbackToNetwork){const c=a.integrity,r=e.integrity,i=!r||r===c;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||c:void 0})),c&&i&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new f("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new f("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==g.copyRedirectedCacheableResponsesPlugin&&(a===g.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};g.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await ce(n):n}};class pe{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:k.getPrecacheName(e),plugins:[...t,new ae({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:a,url:c}=se(s),r=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==a)throw new f("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:a});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==s.integrity)throw new f("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(a,s.integrity)}if(this._urlsToCacheKeys.set(c,a),this._urlsToCacheModes.set(c,r),t.length>0){const i=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(i)}}}install(e){return O(e,async()=>{const t=new ne;this.strategy.plugins.push(t);for(const[c,r]of this._urlsToCacheKeys){const i=this._cacheKeysToIntegrities.get(r),o=this._urlsToCacheModes.get(c),l=new Request(c,{integrity:i,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:l,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}})}activate(e){return O(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),c=[];for(const r of s)a.has(r.url)||(await t.delete(r),c.push(r.url));return{deletedURLs:c}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new f("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let v;const x=()=>(v||(v=new pe),v);try{self["workbox:routing:7.0.0"]&&_()}catch{}const W="GET",U=n=>n&&typeof n=="object"?n:{handle:n};class m{constructor(e,t,s=W){this.handler=U(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=U(e)}}class ge extends m{constructor(e,t,s){const a=({url:c})=>{const r=e.exec(c.href);if(r&&!(c.origin!==location.origin&&r.index!==0))return r.slice(1)};super(a,t,s)}}class ye{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const c=new Request(...a);return this.handleRequest({request:c,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:c,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=r&&r.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let l;try{l=i.handle({url:s,request:e,event:t,params:c})}catch(h){l=Promise.reject(h)}const u=r&&r.catchHandler;return l instanceof Promise&&(this._catchHandler||u)&&(l=l.catch(async h=>{if(u)try{return await u.handle({url:s,request:e,event:t,params:c})}catch(p){p instanceof Error&&(h=p)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw h})),l}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const c=this._routes.get(s.method)||[];for(const r of c){let i;const o=r.match({url:e,sameOrigin:t,request:s,event:a});if(o)return i=o,(Array.isArray(i)&&i.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(i=void 0),{route:r,params:i}}return{}}setDefaultHandler(e,t=W){this._defaultHandlerMap.set(t,U(e))}setCatchHandler(e){this._catchHandler=U(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new f("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new f("unregister-route-route-not-registered")}}let R;const D=()=>(R||(R=new ye,R.addFetchListener(),R.addCacheListener()),R);function N(n,e,t){let s;if(typeof n=="string"){const c=new URL(n,location.href),r=({url:i})=>i.href===c.href;s=new m(r,e,t)}else if(n instanceof RegExp)s=new ge(n,e,t);else if(typeof n=="function")s=new m(n,e,t);else if(n instanceof m)s=n;else throw new f("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return D().registerRoute(s),s}function me(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(s=>s.test(t))&&n.searchParams.delete(t);return n}function*we(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const c=new URL(n,location.href);c.hash="",yield c.href;const r=me(c,e);if(yield r.href,t&&r.pathname.endsWith("/")){const i=new URL(r.href);i.pathname+=t,yield i.href}if(s){const i=new URL(r.href);i.pathname+=".html",yield i.href}if(a){const i=a({url:c});for(const o of i)yield o.href}}class Re extends m{constructor(e,t){const s=({request:a})=>{const c=e.getURLsToCacheKeys();for(const r of we(a.url,t)){const i=c.get(r);if(i){const o=e.getIntegrityForCacheKey(i);return{cacheKey:i,integrity:o}}}};super(s,e.strategy)}}function Ce(n){const e=x(),t=new Re(e,n);N(t)}const _e="-precache-",be=async(n,e=_e)=>{const s=(await self.caches.keys()).filter(a=>a.includes(e)&&a.includes(self.registration.scope)&&a!==n);return await Promise.all(s.map(a=>self.caches.delete(a))),s};function Ue(){self.addEventListener("activate",n=>{const e=k.getPrecacheName();n.waitUntil(be(e).then(t=>{}))})}function ke(n){return x().createHandlerBoundToURL(n)}function Pe(n){x().precache(n)}function Le(n,e){Pe(n),Ce(e)}const q={cacheWillUpdate:async({response:n})=>n.status===200||n.status===0?n:null};class ve extends E{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(q),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){const s=[],a=[];let c;if(this._networkTimeoutSeconds){const{id:o,promise:l}=this._getTimeoutPromise({request:e,logs:s,handler:t});c=o,a.push(l)}const r=this._getNetworkPromise({timeoutId:c,request:e,logs:s,handler:t});a.push(r);const i=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await r)());if(!i)throw new f("no-response",{url:e.url});return i}_getTimeoutPromise({request:e,logs:t,handler:s}){let a;return{promise:new Promise(r=>{a=setTimeout(async()=>{r(await s.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:a}){let c,r;try{r=await a.fetchAndCachePut(t)}catch(i){i instanceof Error&&(c=i)}return e&&clearTimeout(e),(c||!r)&&(r=await a.cacheMatch(t)),r}}class Te extends E{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(q)}async _handle(e,t){const s=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(s);let a=await t.cacheMatch(e),c;if(!a)try{a=await s}catch(r){r instanceof Error&&(c=r)}if(!a)throw new f("no-response",{url:e.url,error:c});return a}}class Ke extends m{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super(a=>this._match(a),e),this._allowlist=t,this._denylist=s}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const s=e.pathname+e.search;for(const a of this._denylist)if(a.test(s))return!1;return!!this._allowlist.some(a=>a.test(s))}}function Ne(n){D().setDefaultHandler(n)}const Ee=[...publicDirAssets,...emittedAssets].filter(n=>!excludeAssets.includes(n));function xe(n,e){const t=/^build\/q-/;return n.map(s=>s.match(t)?{url:s,revision:null}:{url:s,revision:e})}function Ae(n="auto-update"){const e=routes.filter(c=>!c.hasParams),t=routes.filter(c=>c.hasParams);Ue(),Le(xe([...e.map(c=>c.pathname),...Ee],manifestHash)),Ne(new ve);for(const c of e)N(new Ke(ke(c.pathname),{allowlist:[c.pattern]}));for(const c of t)N(c.pattern,new Te);self.addEventListener("activate",async()=>{(await self.clients.matchAll({type:"window"})).forEach(r=>{r.navigate(r.url)})}),self.skipWaiting();const s="/build/",a=new MessageEvent("message",{data:{type:"qprefetch",base:s,links:routes.map(c=>c.pathname),bundles:appBundles.map(c=>c[0])}});self.dispatchEvent(a)}X();Ae();

        
        